datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Pilot {
  id          Int              @id @default(autoincrement())
  email       String           @unique
  ivaoId      String?          @unique
  vatsimId    String?          @unique
  firstName   String
  lastName    String
  birthDate   DateTime?
  callsign    String?
  password    String?
  hours       Float            @default(0)
  rank        String           @default("Cadet")
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  pilotPermissions PilotPermission[]
  flights     Flight[]
}

model Permission {
  id          Int              @id @default(autoincrement())
  name        String           @unique // Example: "VIEW_PILOTS", "MANAGE_FLIGHTS"
  description String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  pilotPermissions PilotPermission[]
}

model PilotPermission {
  pilotId     Int      @map("pilot_id")
  permissionId Int     @map("permission_id")
  pilot       Pilot    @relation(fields: [pilotId], references: [id])
  permission  Permission @relation(fields: [permissionId], references: [id])
  createdAt   DateTime @default(now())
  @@id([pilotId, permissionId])
  @@map("pilot_permissions")
}

model Flight {
  id        Int      @id @default(autoincrement())
  pilotId   Int
  pilot     Pilot    @relation(fields: [pilotId], references: [id])
  route     String
  aircraft  String
  status    String   @default("Pending")
  pirep     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rules {
  id        Int      @id @default(autoincrement())
  lang      String   @db.VarChar(4)
  text      String   @db.VarChar(1024)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SocialNetwork {
  id        Int      @id @default(autoincrement())
  icon      String   @db.VarChar(255)
  url       String   @db.VarChar(255)
  name      String   @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Documentation {
  id        Int      @id @default(autoincrement())
  url       String   @db.VarChar(255)
  name      String   @db.VarChar(100)
  isPublic  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id              Int      @id @default(autoincrement())
  time_event_start DateTime
  time_event_end   DateTime
  open_view_date   DateTime
  close_view_date  DateTime
  text            String   @db.VarChar(1024)
  banner          String   @db.VarChar(255)
  points          Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Notam {
  id              Int      @id @default(autoincrement())
  text            String   @db.VarChar(1024)
  lang            String   @db.VarChar(4)
  active_date     DateTime
  desactivate_date DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Config {
  name      String   @id
  isActive  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Simulator {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  logo      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Airline {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  logo      String   @db.VarChar(255)
  can_join  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}